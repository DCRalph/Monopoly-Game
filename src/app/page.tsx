"use client";

import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
// import Link from "next/link";
import Image from "next/image";
// import { api } from "~/utils/api";

import { useState, useEffect } from "react";
import { prisma } from "~/server/db";

export default function Home() {
  // const hello = api.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
          Monopoly Game
        </h1>

        <AuthShowcase />

        <Number />
      </main>
    </>
  );
}

function Number() {
  const [number, setNumber] = useState(0);

  // get from db
  const { data: sessionData } = useSession();

  // get number from db
  

  useEffect(() => {
    // save number to user
  }, [number]);

  return (
    <div>
      <button
        onClick={() => setNumber(number - 1)}
        className="rounded-lg bg-red-500 px-4 py-2"
      >
        down
      </button>
      <h1 className="text-4xl text-white">{number}</h1>
      <button
        onClick={() => setNumber(number + 1)}
        className="rounded-lg bg-green-500 px-4 py-2"
      >
        up
      </button>
    </div>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();

  console.log(sessionData?.user);

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {sessionData?.user?.email && <span> ({sessionData.user?.email})</span>}
        {sessionData?.user?.image && (
          <Image
            src={sessionData.user?.image}
            width={128}
            height={128}
            alt="User Icon"
          />
        )}
        {/* {sessionData?.user?.image && (
          <Image
            src={sessionData.user?.image}
            width={32}
            height={32}
            alt="User Icon"
          />
        )} */}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
}
